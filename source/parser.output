Terminals unused in grammar

    LEFT_BRACE
    RIGHT_BRACE
    LEFT_BRACKET
    RIGHT_BRACKET
    SEMICOLON
    COMMA
    FULLSTOP
    COLON
    DOUBLE_FULLSTOP
    DOUBLE_COLON
    IF
    ELSE
    WHILE
    FOR
    FUNCTION
    RETURN
    BREAK
    CONTINUE
    LOCAL
    TRUE
    FALSE
    NIL
    PLUS_PLUS
    MINUS_MINUS


State 9 conflicts: 1 shift/reduce
State 29 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exprs
    2        | %empty

    3 expr: INTEGER
    4     | REAL
    5     | STRING
    6     | ID
    7     | ID ASSIGN expr
    8     | expr OR expr
    9     | expr AND expr
   10     | expr NOT_EQUAL expr
   11     | expr EQUAL expr
   12     | expr LESS_EQUAL expr
   13     | expr LESS expr
   14     | expr GREATER_EQUAL expr
   15     | expr GREATER expr
   16     | expr PLUS expr
   17     | expr MINUS expr
   18     | expr MUL expr
   19     | expr DIV expr
   20     | expr MODULO expr
   21     | LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   22     | MINUS expr
   23     | NOT expr

   24 exprs: exprs expr
   25      | expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <int_value> (258) 3
    REAL <real_value> (259) 4
    ID <string_value> (260) 6 7
    STRING <string_value> (261) 5
    LEFT_BRACE <string_value> (262)
    RIGHT_BRACE <string_value> (263)
    LEFT_BRACKET <string_value> (264)
    RIGHT_BRACKET <string_value> (265)
    LEFT_PARENTHESIS <string_value> (266) 21
    RIGHT_PARENTHESIS <string_value> (267) 21
    SEMICOLON <string_value> (268)
    COMMA <string_value> (269)
    FULLSTOP <string_value> (270)
    COLON <string_value> (271)
    DOUBLE_FULLSTOP <string_value> (272)
    DOUBLE_COLON <string_value> (273)
    IF <string_value> (274)
    ELSE <string_value> (275)
    WHILE <string_value> (276)
    FOR <string_value> (277)
    FUNCTION <string_value> (278)
    RETURN <string_value> (279)
    BREAK <string_value> (280)
    CONTINUE <string_value> (281)
    AND <string_value> (282) 9
    NOT <string_value> (283) 23
    OR <string_value> (284) 8
    LOCAL <string_value> (285)
    TRUE <string_value> (286)
    FALSE <string_value> (287)
    NIL <string_value> (288)
    ASSIGN <string_value> (289) 7
    PLUS <string_value> (290) 16
    MINUS <string_value> (291) 17 22
    MUL <string_value> (292) 18
    DIV <string_value> (293) 19
    MODULO <string_value> (294) 20
    EQUAL <string_value> (295) 11
    NOT_EQUAL <string_value> (296) 10
    PLUS_PLUS <string_value> (297)
    MINUS_MINUS <string_value> (298)
    GREATER <string_value> (299) 15
    GREATER_EQUAL <string_value> (300) 14
    LESS <string_value> (301) 13
    LESS_EQUAL <string_value> (302) 12
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0
    expr <expr_type> (51)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    exprs (52)
        on left: 24 25
        on right: 1 24


State 0

    0 $accept: . program $end

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    $default  reduce using rule 2 (program)

    program  go to state 8
    expr     go to state 9
    exprs    go to state 10


State 1

    3 expr: INTEGER .

    $default  reduce using rule 3 (expr)


State 2

    4 expr: REAL .

    $default  reduce using rule 4 (expr)


State 3

    6 expr: ID .
    7     | ID . ASSIGN expr

    ASSIGN  shift, and go to state 11

    $default  reduce using rule 6 (expr)


State 4

    5 expr: STRING .

    $default  reduce using rule 5 (expr)


State 5

   21 expr: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 12


State 6

   23 expr: NOT . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 13


State 7

   22 expr: MINUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 14


State 8

    0 $accept: program . $end

    $end  shift, and go to state 15


State 9

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr
   25 exprs: expr .

    AND            shift, and go to state 16
    OR             shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    MUL            shift, and go to state 20
    DIV            shift, and go to state 21
    MODULO         shift, and go to state 22
    EQUAL          shift, and go to state 23
    NOT_EQUAL      shift, and go to state 24
    GREATER        shift, and go to state 25
    GREATER_EQUAL  shift, and go to state 26
    LESS           shift, and go to state 27
    LESS_EQUAL     shift, and go to state 28

    MINUS     [reduce using rule 25 (exprs)]
    $default  reduce using rule 25 (exprs)


State 10

    1 program: exprs .
   24 exprs: exprs . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    $default  reduce using rule 1 (program)

    expr  go to state 29


State 11

    7 expr: ID ASSIGN . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 30


State 12

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr
   21     | LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 31
    AND                shift, and go to state 16
    OR                 shift, and go to state 17
    PLUS               shift, and go to state 18
    MINUS              shift, and go to state 19
    MUL                shift, and go to state 20
    DIV                shift, and go to state 21
    MODULO             shift, and go to state 22
    EQUAL              shift, and go to state 23
    NOT_EQUAL          shift, and go to state 24
    GREATER            shift, and go to state 25
    GREATER_EQUAL      shift, and go to state 26
    LESS               shift, and go to state 27
    LESS_EQUAL         shift, and go to state 28


State 13

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr
   23     | NOT expr .

    $default  reduce using rule 23 (expr)


State 14

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr
   22     | MINUS expr .

    $default  reduce using rule 22 (expr)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    9 expr: expr AND . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 32


State 17

    8 expr: expr OR . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 33


State 18

   16 expr: expr PLUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 34


State 19

   17 expr: expr MINUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 35


State 20

   18 expr: expr MUL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 36


State 21

   19 expr: expr DIV . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 37


State 22

   20 expr: expr MODULO . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 38


State 23

   11 expr: expr EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 39


State 24

   10 expr: expr NOT_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 40


State 25

   15 expr: expr GREATER . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 41


State 26

   14 expr: expr GREATER_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 42


State 27

   13 expr: expr LESS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 43


State 28

   12 expr: expr LESS_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_PARENTHESIS  shift, and go to state 5
    NOT               shift, and go to state 6
    MINUS             shift, and go to state 7

    expr  go to state 44


State 29

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr
   24 exprs: exprs expr .

    AND            shift, and go to state 16
    OR             shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    MUL            shift, and go to state 20
    DIV            shift, and go to state 21
    MODULO         shift, and go to state 22
    EQUAL          shift, and go to state 23
    NOT_EQUAL      shift, and go to state 24
    GREATER        shift, and go to state 25
    GREATER_EQUAL  shift, and go to state 26
    LESS           shift, and go to state 27
    LESS_EQUAL     shift, and go to state 28

    MINUS     [reduce using rule 24 (exprs)]
    $default  reduce using rule 24 (exprs)


State 30

    7 expr: ID ASSIGN expr .
    8     | expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    AND            shift, and go to state 16
    OR             shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    MUL            shift, and go to state 20
    DIV            shift, and go to state 21
    MODULO         shift, and go to state 22
    EQUAL          shift, and go to state 23
    NOT_EQUAL      shift, and go to state 24
    GREATER        shift, and go to state 25
    GREATER_EQUAL  shift, and go to state 26
    LESS           shift, and go to state 27
    LESS_EQUAL     shift, and go to state 28

    $default  reduce using rule 7 (expr)


State 31

   21 expr: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 21 (expr)


State 32

    8 expr: expr . OR expr
    9     | expr . AND expr
    9     | expr AND expr .
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    MUL            shift, and go to state 20
    DIV            shift, and go to state 21
    MODULO         shift, and go to state 22
    EQUAL          shift, and go to state 23
    NOT_EQUAL      shift, and go to state 24
    GREATER        shift, and go to state 25
    GREATER_EQUAL  shift, and go to state 26
    LESS           shift, and go to state 27
    LESS_EQUAL     shift, and go to state 28

    $default  reduce using rule 9 (expr)


State 33

    8 expr: expr . OR expr
    8     | expr OR expr .
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    AND            shift, and go to state 16
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    MUL            shift, and go to state 20
    DIV            shift, and go to state 21
    MODULO         shift, and go to state 22
    EQUAL          shift, and go to state 23
    NOT_EQUAL      shift, and go to state 24
    GREATER        shift, and go to state 25
    GREATER_EQUAL  shift, and go to state 26
    LESS           shift, and go to state 27
    LESS_EQUAL     shift, and go to state 28

    $default  reduce using rule 8 (expr)


State 34

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   16     | expr PLUS expr .
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    MUL     shift, and go to state 20
    DIV     shift, and go to state 21
    MODULO  shift, and go to state 22

    $default  reduce using rule 16 (expr)


State 35

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   17     | expr MINUS expr .
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    MUL     shift, and go to state 20
    DIV     shift, and go to state 21
    MODULO  shift, and go to state 22

    $default  reduce using rule 17 (expr)


State 36

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   18     | expr MUL expr .
   19     | expr . DIV expr
   20     | expr . MODULO expr

    $default  reduce using rule 18 (expr)


State 37

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   19     | expr DIV expr .
   20     | expr . MODULO expr

    $default  reduce using rule 19 (expr)


State 38

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr
   20     | expr MODULO expr .

    $default  reduce using rule 20 (expr)


State 39

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   11     | expr EQUAL expr .
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    MUL            shift, and go to state 20
    DIV            shift, and go to state 21
    MODULO         shift, and go to state 22
    GREATER        shift, and go to state 25
    GREATER_EQUAL  shift, and go to state 26
    LESS           shift, and go to state 27
    LESS_EQUAL     shift, and go to state 28

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 11 (expr)


State 40

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   10     | expr NOT_EQUAL expr .
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    MUL            shift, and go to state 20
    DIV            shift, and go to state 21
    MODULO         shift, and go to state 22
    GREATER        shift, and go to state 25
    GREATER_EQUAL  shift, and go to state 26
    LESS           shift, and go to state 27
    LESS_EQUAL     shift, and go to state 28

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 10 (expr)


State 41

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   15     | expr GREATER expr .
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    PLUS    shift, and go to state 18
    MINUS   shift, and go to state 19
    MUL     shift, and go to state 20
    DIV     shift, and go to state 21
    MODULO  shift, and go to state 22

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 15 (expr)


State 42

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   14     | expr GREATER_EQUAL expr .
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    PLUS    shift, and go to state 18
    MINUS   shift, and go to state 19
    MUL     shift, and go to state 20
    DIV     shift, and go to state 21
    MODULO  shift, and go to state 22

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 14 (expr)


State 43

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   13     | expr . LESS expr
   13     | expr LESS expr .
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    PLUS    shift, and go to state 18
    MINUS   shift, and go to state 19
    MUL     shift, and go to state 20
    DIV     shift, and go to state 21
    MODULO  shift, and go to state 22

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 13 (expr)


State 44

    8 expr: expr . OR expr
    9     | expr . AND expr
   10     | expr . NOT_EQUAL expr
   11     | expr . EQUAL expr
   12     | expr . LESS_EQUAL expr
   12     | expr LESS_EQUAL expr .
   13     | expr . LESS expr
   14     | expr . GREATER_EQUAL expr
   15     | expr . GREATER expr
   16     | expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MODULO expr

    PLUS    shift, and go to state 18
    MINUS   shift, and go to state 19
    MUL     shift, and go to state 20
    DIV     shift, and go to state 21
    MODULO  shift, and go to state 22

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 12 (expr)
