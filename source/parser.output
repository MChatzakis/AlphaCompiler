State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 stmts: stmts stmt
   14      | stmt

   15 expr: lvalue ASSIGN expr
   16     | expr OR expr
   17     | expr AND expr
   18     | expr NOT_EQUAL expr
   19     | expr EQUAL expr
   20     | expr LESS_EQUAL expr
   21     | expr LESS expr
   22     | expr GREATER_EQUAL expr
   23     | expr GREATER expr
   24     | expr PLUS expr
   25     | expr MINUS expr
   26     | expr MUL expr
   27     | expr DIV expr
   28     | expr MODULO expr
   29     | LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   30     | MINUS expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue
   33     | lvalue PLUS_PLUS
   34     | MINUS_MINUS lvalue
   35     | lvalue MINUS_MINUS
   36     | primary

   37 primary: lvalue
   38        | call
   39        | objectdef
   40        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   41        | const

   42 lvalue: ID
   43       | LOCAL ID
   44       | DOUBLE_COLON ID
   45       | member

   46 member: lvalue FULLSTOP ID
   47       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   48       | call FULLSTOP ID
   49       | call LEFT_BRACKET expr RIGHT_BRACKET

   50 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   51     | lvalue callsuffix
   52     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   53 callsuffix: normcall
   54           | methodcall

   55 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   56 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 elist: expr
   58      | elist COMMA expr
   59      | %empty

   60 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET
   61          | LEFT_BRACKET elist RIGHT_BRACKET

   62 indexed: indexedelem
   63        | indexed COMMA indexedelem

   64 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   65 $@1: %empty

   66 block: LEFT_BRACE $@1 RIGHT_BRACE

   67 $@2: %empty

   68 block: LEFT_BRACE $@2 stmts RIGHT_BRACE

   69 $@3: %empty

   70 $@4: %empty

   71 funcdef: FUNCTION LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

   72 $@5: %empty

   73 $@6: %empty

   74 $@7: %empty

   75 funcdef: FUNCTION ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

   76 const: INTEGER
   77      | REAL
   78      | STRING
   79      | NIL
   80      | TRUE
   81      | FALSE

   82 idlist: ID
   83       | idlist COMMA ID
   84       | %empty

   85 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   86       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

   87 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   88 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

   89 returnstmt: RETURN SEMICOLON
   90           | RETURN expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <int_value> (258) 76
    REAL <real_value> (259) 77
    ID <string_value> (260) 42 43 44 46 48 56 75 82 83
    STRING <string_value> (261) 78
    LEFT_BRACE (262) 64 66 68
    RIGHT_BRACE (263) 64 66 68
    LEFT_BRACKET (264) 47 49 60 61
    RIGHT_BRACKET (265) 47 49 60 61
    LEFT_PARENTHESIS (266) 29 40 50 52 55 56 71 75 85 86 87 88
    RIGHT_PARENTHESIS (267) 29 40 50 52 55 56 71 75 85 86 87 88
    SEMICOLON (268) 3 8 9 12 88 89 90
    COMMA (269) 58 63 83
    FULLSTOP (270) 46 48
    COLON (271) 64
    DOUBLE_FULLSTOP (272) 56
    DOUBLE_COLON (273) 44
    IF (274) 85 86
    ELSE (275) 86
    WHILE (276) 87
    FOR (277) 88
    FUNCTION (278) 71 75
    RETURN (279) 89 90
    BREAK (280) 8
    CONTINUE (281) 9
    AND (282) 17
    NOT (283) 31
    OR (284) 16
    LOCAL (285) 43
    TRUE (286) 80
    FALSE (287) 81
    NIL (288) 79
    ASSIGN (289) 15
    PLUS (290) 24
    MINUS (291) 25 30
    MUL (292) 26
    DIV (293) 27
    MODULO (294) 28
    EQUAL (295) 19
    NOT_EQUAL (296) 18
    PLUS_PLUS (297) 32 33
    MINUS_MINUS (298) 34 35
    GREATER (299) 23
    GREATER_EQUAL (300) 22
    LESS (301) 21
    LESS_EQUAL (302) 20
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0
    stmt (51)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 13 14 85 86 87 88
    stmts (52)
        on left: 13 14
        on right: 1 13 68
    expr (53)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 3 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 47 49 57 58 64 85 86 87 88 90
    primary (54)
        on left: 37 38 39 40 41
        on right: 36
    lvalue <symTabEntry> (55)
        on left: 42 43 44 45
        on right: 15 32 33 34 35 37 46 47 51
    member (56)
        on left: 46 47 48 49
        on right: 45
    call <symTabEntry> (57)
        on left: 50 51 52
        on right: 38 48 49 50
    callsuffix (58)
        on left: 53 54
        on right: 51
    normcall (59)
        on left: 55
        on right: 53
    methodcall (60)
        on left: 56
        on right: 54
    elist (61)
        on left: 57 58 59
        on right: 50 52 55 56 58 61 88
    objectdef (62)
        on left: 60 61
        on right: 39
    indexed (63)
        on left: 62 63
        on right: 60 63
    indexedelem (64)
        on left: 64
        on right: 62 63
    block (65)
        on left: 66 68
        on right: 10 71 75
    $@1 (66)
        on left: 65
        on right: 66
    $@2 (67)
        on left: 67
        on right: 68
    funcdef <symTabEntry> (68)
        on left: 71 75
        on right: 11 40 52
    $@3 (69)
        on left: 69
        on right: 71
    $@4 (70)
        on left: 70
        on right: 71
    $@5 (71)
        on left: 72
        on right: 75
    $@6 (72)
        on left: 73
        on right: 75
    $@7 (73)
        on left: 74
        on right: 75
    const (74)
        on left: 76 77 78 79 80 81
        on right: 41
    idlist (75)
        on left: 82 83 84
        on right: 71 75 83
    ifstmt (76)
        on left: 85 86
        on right: 4
    whilestmt (77)
        on left: 87
        on right: 5
    forstmt (78)
        on left: 88
        on right: 6
    returnstmt (79)
        on left: 89 90
        on right: 7


State 0

    0 $accept: . program $end

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    stmts       go to state 27
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 1

   76 const: INTEGER .

    $default  reduce using rule 76 (const)


State 2

   77 const: REAL .

    $default  reduce using rule 77 (const)


State 3

   42 lvalue: ID .

    $default  reduce using rule 42 (lvalue)


State 4

   78 const: STRING .

    $default  reduce using rule 78 (const)


State 5

   66 block: LEFT_BRACE . $@1 RIGHT_BRACE
   68      | LEFT_BRACE . $@2 stmts RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 65 ($@1)
    $default     reduce using rule 67 ($@2)

    $@1  go to state 41
    $@2  go to state 42


State 6

   60 objectdef: LEFT_BRACKET . indexed RIGHT_BRACKET
   61          | LEFT_BRACKET . elist RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 43
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 59 (elist)

    expr         go to state 44
    primary      go to state 29
    lvalue       go to state 30
    member       go to state 31
    call         go to state 32
    elist        go to state 45
    objectdef    go to state 33
    indexed      go to state 46
    indexedelem  go to state 47
    const        go to state 36


State 7

   29 expr: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   40 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   52 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    FUNCTION          shift, and go to state 13
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 48
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    funcdef    go to state 49
    const      go to state 36


State 8

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 9

   44 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 50


State 10

   85 ifstmt: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   86       | IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

    LEFT_PARENTHESIS  shift, and go to state 51


State 11

   87 whilestmt: WHILE . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 52


State 12

   88 forstmt: FOR . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 53


State 13

   71 funcdef: FUNCTION . LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block
   75        | FUNCTION . ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    ID                shift, and go to state 54
    LEFT_PARENTHESIS  shift, and go to state 55


State 14

   89 returnstmt: RETURN . SEMICOLON
   90           | RETURN . expr SEMICOLON

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 56
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 57
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 15

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 16

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 17

   31 expr: NOT . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 60
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 18

   43 lvalue: LOCAL . ID

    ID  shift, and go to state 61


State 19

   80 const: TRUE .

    $default  reduce using rule 80 (const)


State 20

   81 const: FALSE .

    $default  reduce using rule 81 (const)


State 21

   79 const: NIL .

    $default  reduce using rule 79 (const)


State 22

   30 expr: MINUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 62
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 23

   32 expr: PLUS_PLUS . lvalue

    ID                shift, and go to state 3
    LEFT_PARENTHESIS  shift, and go to state 63
    DOUBLE_COLON      shift, and go to state 9
    LOCAL             shift, and go to state 18

    lvalue  go to state 64
    member  go to state 31
    call    go to state 65


State 24

   34 expr: MINUS_MINUS . lvalue

    ID                shift, and go to state 3
    LEFT_PARENTHESIS  shift, and go to state 63
    DOUBLE_COLON      shift, and go to state 9
    LOCAL             shift, and go to state 18

    lvalue  go to state 66
    member  go to state 31
    call    go to state 65


State 25

    0 $accept: program . $end

    $end  shift, and go to state 67


State 26

   14 stmts: stmt .

    $default  reduce using rule 14 (stmts)


State 27

    1 program: stmts .
   13 stmts: stmts . stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 68
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 28

    3 stmt: expr . SEMICOLON
   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    SEMICOLON      shift, and go to state 69
    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82


State 29

   36 expr: primary .

    $default  reduce using rule 36 (expr)


State 30

   15 expr: lvalue . ASSIGN expr
   33     | lvalue . PLUS_PLUS
   35     | lvalue . MINUS_MINUS
   37 primary: lvalue .
   46 member: lvalue . FULLSTOP ID
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 83
    LEFT_PARENTHESIS  shift, and go to state 84
    FULLSTOP          shift, and go to state 85
    DOUBLE_FULLSTOP   shift, and go to state 86
    ASSIGN            shift, and go to state 87
    PLUS_PLUS         shift, and go to state 88
    MINUS_MINUS       shift, and go to state 89

    $default  reduce using rule 37 (primary)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 31

   45 lvalue: member .

    $default  reduce using rule 45 (lvalue)


State 32

   38 primary: call .
   48 member: call . FULLSTOP ID
   49       | call . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    FULLSTOP          shift, and go to state 95

    $default  reduce using rule 38 (primary)


State 33

   39 primary: objectdef .

    $default  reduce using rule 39 (primary)


State 34

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 35

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 36

   41 primary: const .

    $default  reduce using rule 41 (primary)


State 37

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 38

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 39

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 40

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 41

   66 block: LEFT_BRACE $@1 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 96


State 42

   68 block: LEFT_BRACE $@2 . stmts RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 26
    stmts       go to state 97
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 43

   64 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 98
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 44

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   57 elist: expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 57 (elist)


State 45

   58 elist: elist . COMMA expr
   61 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 99
    COMMA          shift, and go to state 100


State 46

   60 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET
   63 indexed: indexed . COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 101
    COMMA          shift, and go to state 102


State 47

   62 indexed: indexedelem .

    $default  reduce using rule 62 (indexed)


State 48

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   29     | LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 103
    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    MUL                shift, and go to state 74
    DIV                shift, and go to state 75
    MODULO             shift, and go to state 76
    EQUAL              shift, and go to state 77
    NOT_EQUAL          shift, and go to state 78
    GREATER            shift, and go to state 79
    GREATER_EQUAL      shift, and go to state 80
    LESS               shift, and go to state 81
    LESS_EQUAL         shift, and go to state 82


State 49

   40 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   52 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 104


State 50

   44 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 44 (lvalue)


State 51

   85 ifstmt: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt
   86       | IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt ELSE stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 105
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 52

   87 whilestmt: WHILE LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 106
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 53

   88 forstmt: FOR LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 59 (elist)

    expr       go to state 44
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 107
    objectdef  go to state 33
    const      go to state 36


State 54

   75 funcdef: FUNCTION ID . $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    $default  reduce using rule 72 ($@5)

    $@5  go to state 108


State 55

   71 funcdef: FUNCTION LEFT_PARENTHESIS . $@3 idlist RIGHT_PARENTHESIS $@4 block

    $default  reduce using rule 69 ($@3)

    $@3  go to state 109


State 56

   89 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 89 (returnstmt)


State 57

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   90 returnstmt: RETURN expr . SEMICOLON

    SEMICOLON      shift, and go to state 110
    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82


State 58

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 59

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 60

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   31     | NOT expr .

    $default  reduce using rule 31 (expr)


State 61

   43 lvalue: LOCAL ID .

    $default  reduce using rule 43 (lvalue)


State 62

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   30     | MINUS expr .

    $default  reduce using rule 30 (expr)


State 63

   52 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 13

    funcdef  go to state 111


State 64

   32 expr: PLUS_PLUS lvalue .
   46 member: lvalue . FULLSTOP ID
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 83
    LEFT_PARENTHESIS  shift, and go to state 84
    FULLSTOP          shift, and go to state 85
    DOUBLE_FULLSTOP   shift, and go to state 86

    $default  reduce using rule 32 (expr)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 65

   48 member: call . FULLSTOP ID
   49       | call . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    FULLSTOP          shift, and go to state 95


State 66

   34 expr: MINUS_MINUS lvalue .
   46 member: lvalue . FULLSTOP ID
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 83
    LEFT_PARENTHESIS  shift, and go to state 84
    FULLSTOP          shift, and go to state 85
    DOUBLE_FULLSTOP   shift, and go to state 86

    $default  reduce using rule 34 (expr)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 67

    0 $accept: program $end .

    $default  accept


State 68

   13 stmts: stmts stmt .

    $default  reduce using rule 13 (stmts)


State 69

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 70

   17 expr: expr AND . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 112
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 71

   16 expr: expr OR . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 113
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 72

   24 expr: expr PLUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 114
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 73

   25 expr: expr MINUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 115
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 74

   26 expr: expr MUL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 116
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 75

   27 expr: expr DIV . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 117
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 76

   28 expr: expr MODULO . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 118
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 77

   19 expr: expr EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 119
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 78

   18 expr: expr NOT_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 120
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 79

   23 expr: expr GREATER . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 121
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 80

   22 expr: expr GREATER_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 122
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 81

   21 expr: expr LESS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 123
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 82

   20 expr: expr LESS_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 124
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 83

   47 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 125
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 84

   55 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 59 (elist)

    expr       go to state 44
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 126
    objectdef  go to state 33
    const      go to state 36


State 85

   46 member: lvalue FULLSTOP . ID

    ID  shift, and go to state 127


State 86

   56 methodcall: DOUBLE_FULLSTOP . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 128


State 87

   15 expr: lvalue ASSIGN . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 129
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 88

   33 expr: lvalue PLUS_PLUS .

    $default  reduce using rule 33 (expr)


State 89

   35 expr: lvalue MINUS_MINUS .

    $default  reduce using rule 35 (expr)


State 90

   51 call: lvalue callsuffix .

    $default  reduce using rule 51 (call)


State 91

   53 callsuffix: normcall .

    $default  reduce using rule 53 (callsuffix)


State 92

   54 callsuffix: methodcall .

    $default  reduce using rule 54 (callsuffix)


State 93

   49 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 130
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 94

   50 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 59 (elist)

    expr       go to state 44
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 131
    objectdef  go to state 33
    const      go to state 36


State 95

   48 member: call FULLSTOP . ID

    ID  shift, and go to state 132


State 96

   66 block: LEFT_BRACE $@1 RIGHT_BRACE .

    $default  reduce using rule 66 (block)


State 97

   13 stmts: stmts . stmt
   68 block: LEFT_BRACE $@2 stmts . RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    RIGHT_BRACE       shift, and go to state 133
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 68
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 98

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   64 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    COLON          shift, and go to state 134
    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82


State 99

   61 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 61 (objectdef)


State 100

   58 elist: elist COMMA . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 135
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 101

   60 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 60 (objectdef)


State 102

   63 indexed: indexed COMMA . indexedelem

    LEFT_BRACE  shift, and go to state 43

    indexedelem  go to state 136


State 103

   29 expr: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 29 (expr)


State 104

   40 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 137

    $default  reduce using rule 40 (primary)


State 105

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   85 ifstmt: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt
   86       | IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt ELSE stmt

    RIGHT_PARENTHESIS  shift, and go to state 138
    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    MUL                shift, and go to state 74
    DIV                shift, and go to state 75
    MODULO             shift, and go to state 76
    EQUAL              shift, and go to state 77
    NOT_EQUAL          shift, and go to state 78
    GREATER            shift, and go to state 79
    GREATER_EQUAL      shift, and go to state 80
    LESS               shift, and go to state 81
    LESS_EQUAL         shift, and go to state 82


State 106

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   87 whilestmt: WHILE LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 139
    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    MUL                shift, and go to state 74
    DIV                shift, and go to state 75
    MODULO             shift, and go to state 76
    EQUAL              shift, and go to state 77
    NOT_EQUAL          shift, and go to state 78
    GREATER            shift, and go to state 79
    GREATER_EQUAL      shift, and go to state 80
    LESS               shift, and go to state 81
    LESS_EQUAL         shift, and go to state 82


State 107

   58 elist: elist . COMMA expr
   88 forstmt: FOR LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 140
    COMMA      shift, and go to state 100


State 108

   75 funcdef: FUNCTION ID $@5 . LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    LEFT_PARENTHESIS  shift, and go to state 141


State 109

   71 funcdef: FUNCTION LEFT_PARENTHESIS $@3 . idlist RIGHT_PARENTHESIS $@4 block

    ID  shift, and go to state 142

    $default  reduce using rule 84 (idlist)

    idlist  go to state 143


State 110

   90 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 90 (returnstmt)


State 111

   52 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 144


State 112

   16 expr: expr . OR expr
   17     | expr . AND expr
   17     | expr AND expr .
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 17 (expr)


State 113

   16 expr: expr . OR expr
   16     | expr OR expr .
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    AND            shift, and go to state 70
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 16 (expr)


State 114

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   24     | expr PLUS expr .
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    $default  reduce using rule 24 (expr)


State 115

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   25     | expr MINUS expr .
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    $default  reduce using rule 25 (expr)


State 116

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   26     | expr MUL expr .
   27     | expr . DIV expr
   28     | expr . MODULO expr

    $default  reduce using rule 26 (expr)


State 117

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   27     | expr DIV expr .
   28     | expr . MODULO expr

    $default  reduce using rule 27 (expr)


State 118

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   28     | expr MODULO expr .

    $default  reduce using rule 28 (expr)


State 119

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   19     | expr EQUAL expr .
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 19 (expr)


State 120

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   18     | expr NOT_EQUAL expr .
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 18 (expr)


State 121

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   23     | expr GREATER expr .
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 122

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   22     | expr GREATER_EQUAL expr .
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 123

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   21     | expr LESS expr .
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 124

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   20     | expr LESS_EQUAL expr .
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 125

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   47 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 145
    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82


State 126

   55 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   58 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 146
    COMMA              shift, and go to state 100


State 127

   46 member: lvalue FULLSTOP ID .

    $default  reduce using rule 46 (member)


State 128

   56 methodcall: DOUBLE_FULLSTOP ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 147


State 129

   15 expr: lvalue ASSIGN expr .
   16     | expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 15 (expr)


State 130

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   49 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 148
    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82


State 131

   50 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   58 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 149
    COMMA              shift, and go to state 100


State 132

   48 member: call FULLSTOP ID .

    $default  reduce using rule 48 (member)


State 133

   68 block: LEFT_BRACE $@2 stmts RIGHT_BRACE .

    $default  reduce using rule 68 (block)


State 134

   64 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 150
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 135

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   58 elist: elist COMMA expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 58 (elist)


State 136

   63 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 63 (indexed)


State 137

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 59 (elist)

    expr       go to state 44
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 151
    objectdef  go to state 33
    const      go to state 36


State 138

   85 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt
   86       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt ELSE stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 152
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 139

   87 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 153
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 140

   88 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 154
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 36


State 141

   75 funcdef: FUNCTION ID $@5 LEFT_PARENTHESIS . $@6 idlist RIGHT_PARENTHESIS $@7 block

    $default  reduce using rule 73 ($@6)

    $@6  go to state 155


State 142

   82 idlist: ID .

    $default  reduce using rule 82 (idlist)


State 143

   71 funcdef: FUNCTION LEFT_PARENTHESIS $@3 idlist . RIGHT_PARENTHESIS $@4 block
   83 idlist: idlist . COMMA ID

    RIGHT_PARENTHESIS  shift, and go to state 156
    COMMA              shift, and go to state 157


State 144

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 137


State 145

   47 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 47 (member)


State 146

   55 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 55 (normcall)


State 147

   56 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 59 (elist)

    expr       go to state 44
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 158
    objectdef  go to state 33
    const      go to state 36


State 148

   49 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 49 (member)


State 149

   50 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 50 (call)


State 150

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   64 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    RIGHT_BRACE    shift, and go to state 159
    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82


State 151

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   58 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 160
    COMMA              shift, and go to state 100


State 152

   85 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .
   86       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . ELSE stmt

    ELSE  shift, and go to state 161

    ELSE      [reduce using rule 85 (ifstmt)]
    $default  reduce using rule 85 (ifstmt)


State 153

   87 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 87 (whilestmt)


State 154

   16 expr: expr . OR expr
   17     | expr . AND expr
   18     | expr . NOT_EQUAL expr
   19     | expr . EQUAL expr
   20     | expr . LESS_EQUAL expr
   21     | expr . LESS expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . GREATER expr
   24     | expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . MUL expr
   27     | expr . DIV expr
   28     | expr . MODULO expr
   88 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS stmt

    SEMICOLON      shift, and go to state 162
    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    LESS           shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82


State 155

   75 funcdef: FUNCTION ID $@5 LEFT_PARENTHESIS $@6 . idlist RIGHT_PARENTHESIS $@7 block

    ID  shift, and go to state 142

    $default  reduce using rule 84 (idlist)

    idlist  go to state 163


State 156

   71 funcdef: FUNCTION LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS . $@4 block

    $default  reduce using rule 70 ($@4)

    $@4  go to state 164


State 157

   83 idlist: idlist COMMA . ID

    ID  shift, and go to state 165


State 158

   56 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   58 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 166
    COMMA              shift, and go to state 100


State 159

   64 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 64 (indexedelem)


State 160

   52 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (call)


State 161

   86 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE . stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 167
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 162

   88 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 59 (elist)

    expr       go to state 44
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 168
    objectdef  go to state 33
    const      go to state 36


State 163

   75 funcdef: FUNCTION ID $@5 LEFT_PARENTHESIS $@6 idlist . RIGHT_PARENTHESIS $@7 block
   83 idlist: idlist . COMMA ID

    RIGHT_PARENTHESIS  shift, and go to state 169
    COMMA              shift, and go to state 157


State 164

   71 funcdef: FUNCTION LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 . block

    LEFT_BRACE  shift, and go to state 5

    block  go to state 170


State 165

   83 idlist: idlist COMMA ID .

    $default  reduce using rule 83 (idlist)


State 166

   56 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (methodcall)


State 167

   86 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt .

    $default  reduce using rule 86 (ifstmt)


State 168

   58 elist: elist . COMMA expr
   88 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 171
    COMMA              shift, and go to state 100


State 169

   75 funcdef: FUNCTION ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS . $@7 block

    $default  reduce using rule 74 ($@7)

    $@7  go to state 172


State 170

   71 funcdef: FUNCTION LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block .

    $default  reduce using rule 71 (funcdef)


State 171

   88 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    BREAK             shift, and go to state 15
    CONTINUE          shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 173
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 172

   75 funcdef: FUNCTION ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 . block

    LEFT_BRACE  shift, and go to state 5

    block  go to state 174


State 173

   88 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 88 (forstmt)


State 174

   75 funcdef: FUNCTION ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block .

    $default  reduce using rule 75 (funcdef)
