State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 stmts: stmts stmt
   14      | stmt

   15 expr: lvalue ASSIGN expr

   16 $@1: %empty

   17 expr: expr OR $@1 M expr

   18 $@2: %empty

   19 expr: expr AND $@2 M expr

   20 $@3: %empty

   21 expr: expr NOT_EQUAL $@3 expr

   22 $@4: %empty

   23 expr: expr EQUAL $@4 expr
   24     | expr LESS_EQUAL expr
   25     | expr LESS expr
   26     | expr GREATER_EQUAL expr
   27     | expr GREATER expr
   28     | expr PLUS expr
   29     | expr MINUS expr
   30     | expr MUL expr
   31     | expr DIV expr
   32     | expr MODULO expr
   33     | LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   34     | MINUS expr
   35     | NOT expr
   36     | PLUS_PLUS lvalue
   37     | lvalue PLUS_PLUS
   38     | MINUS_MINUS lvalue
   39     | lvalue MINUS_MINUS
   40     | primary

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | DOUBLE_COLON ID
   49       | member

   50 member: lvalue FULLSTOP ID
   51       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   52       | call FULLSTOP ID
   53       | call LEFT_BRACKET expr RIGHT_BRACKET

   54 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   55     | call LEFT_PARENTHESIS RIGHT_PARENTHESIS
   56     | lvalue callsuffix
   57     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS RIGHT_PARENTHESIS

   59 callsuffix: normcall
   60           | methodcall

   61 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   62         | LEFT_PARENTHESIS RIGHT_PARENTHESIS

   63 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   64           | DOUBLE_FULLSTOP ID LEFT_PARENTHESIS RIGHT_PARENTHESIS

   65 elist: expr
   66      | elist COMMA expr

   67 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET
   68          | LEFT_BRACKET elist RIGHT_BRACKET
   69          | LEFT_BRACKET RIGHT_BRACKET

   70 indexed: indexedelem
   71        | indexed COMMA indexedelem

   72 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   73 $@5: %empty

   74 block: LEFT_BRACE $@5 RIGHT_BRACE

   75 $@6: %empty

   76 block: LEFT_BRACE $@6 stmts RIGHT_BRACE

   77 funcname: ID
   78         | %empty

   79 funcprefix: FUNCTION funcname

   80 funcargs: LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS
   81         | LEFT_PARENTHESIS RIGHT_PARENTHESIS

   82 funcbody: block

   83 funcblockstart: %empty

   84 funcblockend: %empty

   85 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend

   86 const: INTEGER
   87      | REAL
   88      | STRING
   89      | NIL
   90      | TRUE
   91      | FALSE

   92 idlist: ID
   93       | idlist COMMA ID

   94 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   95 elseprefix: ELSE

   96 ifstmt: ifprefix stmt elseprefix stmt
   97       | ifprefix stmt

   98 loopstart: %empty

   99 loopend: %empty

  100 loopstmt: loopstart stmt loopend

  101 whilestart: WHILE

  102 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

  103 whilestmt: whilestart whilecond loopstmt

  104 N: %empty

  105 M: %empty

  106 $@7: %empty

  107 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr $@7 SEMICOLON

  108 $@8: %empty

  109 forprefix: FOR LEFT_PARENTHESIS SEMICOLON M expr $@8 SEMICOLON

  110 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N
  111        | forprefix N RIGHT_PARENTHESIS N loopstmt N

  112 returnstmt: RETURN SEMICOLON
  113           | RETURN expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <int_value> (258) 86
    REAL <real_value> (259) 87
    ID <string_value> (260) 46 47 48 50 52 63 64 77 92 93
    STRING <string_value> (261) 88
    LEFT_BRACE (262) 72 74 76
    RIGHT_BRACE (263) 72 74 76
    LEFT_BRACKET (264) 51 53 67 68 69
    RIGHT_BRACKET (265) 51 53 67 68 69
    LEFT_PARENTHESIS (266) 33 44 54 55 57 58 61 62 63 64 80 81 94 102 107 109
    RIGHT_PARENTHESIS (267) 33 44 54 55 57 58 61 62 63 64 80 81 94 102 110 111
    SEMICOLON (268) 3 8 9 12 107 109 112 113
    COMMA (269) 66 71 93
    FULLSTOP (270) 50 52
    COLON (271) 72
    DOUBLE_FULLSTOP (272) 63 64
    DOUBLE_COLON (273) 48
    IF (274) 94
    ELSE (275) 95
    WHILE (276) 101
    FOR (277) 107 109
    FUNCTION (278) 79
    BREAK (279) 8
    CONTINUE (280) 9
    RETURN (281) 112 113
    AND (282) 19
    NOT (283) 35
    OR (284) 17
    LOCAL (285) 47
    TRUE (286) 90
    FALSE (287) 91
    NIL (288) 89
    ASSIGN (289) 15
    PLUS (290) 28
    MINUS (291) 29 34
    MUL (292) 30
    DIV (293) 31
    MODULO (294) 32
    EQUAL (295) 23
    NOT_EQUAL (296) 21
    PLUS_PLUS (297) 36 37
    MINUS_MINUS (298) 38 39
    GREATER (299) 27
    GREATER_EQUAL (300) 26
    LESS (301) 25
    LESS_EQUAL (302) 24
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0
    stmt <st> (51)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 13 14 96 97 100
    stmts <st> (52)
        on left: 13 14
        on right: 1 13 76
    expr <exprVal> (53)
        on left: 15 17 19 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 3 15 17 19 21 23 24 25 26 27 28 29 30 31 32 33 34 35 51 53 65 66 72 94 102 107 109 113
    $@1 (54)
        on left: 16
        on right: 17
    $@2 (55)
        on left: 18
        on right: 19
    $@3 (56)
        on left: 20
        on right: 21
    $@4 (57)
        on left: 22
        on right: 23
    primary <exprVal> (58)
        on left: 41 42 43 44 45
        on right: 40
    lvalue <exprVal> (59)
        on left: 46 47 48 49
        on right: 15 36 37 38 39 41 50 51 56
    member <exprVal> (60)
        on left: 50 51 52 53
        on right: 49
    call <exprVal> (61)
        on left: 54 55 56 57 58
        on right: 42 52 53 54 55
    callsuffix <callFunc> (62)
        on left: 59 60
        on right: 56
    normcall <callFunc> (63)
        on left: 61 62
        on right: 59
    methodcall <callFunc> (64)
        on left: 63 64
        on right: 60
    elist <exprVal> (65)
        on left: 65 66
        on right: 54 57 61 63 66 68 107 110
    objectdef <exprVal> (66)
        on left: 67 68 69
        on right: 43
    indexed <indPair> (67)
        on left: 70 71
        on right: 67 71
    indexedelem <indPair> (68)
        on left: 72
        on right: 70 71
    block <st> (69)
        on left: 74 76
        on right: 10 82
    $@5 (70)
        on left: 73
        on right: 74
    $@6 (71)
        on left: 75
        on right: 76
    funcname <string_value> (72)
        on left: 77 78
        on right: 79
    funcprefix <symTabEntry> (73)
        on left: 79
        on right: 85
    funcargs (74)
        on left: 80 81
        on right: 85
    funcbody <un_value> (75)
        on left: 82
        on right: 85
    funcblockstart (76)
        on left: 83
        on right: 85
    funcblockend (77)
        on left: 84
        on right: 85
    funcdef <symTabEntry> (78)
        on left: 85
        on right: 11 44 57 58
    const <exprVal> (79)
        on left: 86 87 88 89 90 91
        on right: 45
    idlist (80)
        on left: 92 93
        on right: 80 93
    ifprefix <un_value> (81)
        on left: 94
        on right: 96 97
    elseprefix <un_value> (82)
        on left: 95
        on right: 96
    ifstmt <st> (83)
        on left: 96 97
        on right: 4
    loopstart (84)
        on left: 98
        on right: 100
    loopend (85)
        on left: 99
        on right: 100
    loopstmt <st> (86)
        on left: 100
        on right: 103 110 111
    whilestart <un_value> (87)
        on left: 101
        on right: 103
    whilecond <un_value> (88)
        on left: 102
        on right: 103
    whilestmt (89)
        on left: 103
        on right: 5
    N <un_value> (90)
        on left: 104
        on right: 110 111
    M <un_value> (91)
        on left: 105
        on right: 17 19 107 109
    forprefix <forPrefJumps> (92)
        on left: 107 109
        on right: 110 111
    $@7 (93)
        on left: 106
        on right: 107
    $@8 (94)
        on left: 108
        on right: 109
    forstmt (95)
        on left: 110 111
        on right: 6
    returnstmt (96)
        on left: 112 113
        on right: 7


State 0

    0 $accept: . program $end

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    RETURN            shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    stmts       go to state 27
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    whilestart  go to state 40
    whilestmt   go to state 41
    forprefix   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 1

   86 const: INTEGER .

    $default  reduce using rule 86 (const)


State 2

   87 const: REAL .

    $default  reduce using rule 87 (const)


State 3

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


State 4

   88 const: STRING .

    $default  reduce using rule 88 (const)


State 5

   74 block: LEFT_BRACE . $@5 RIGHT_BRACE
   76      | LEFT_BRACE . $@6 stmts RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 73 ($@5)
    $default     reduce using rule 75 ($@6)

    $@5  go to state 45
    $@6  go to state 46


State 6

   67 objectdef: LEFT_BRACKET . indexed RIGHT_BRACKET
   68          | LEFT_BRACKET . elist RIGHT_BRACKET
   69          | LEFT_BRACKET . RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 47
    LEFT_BRACKET      shift, and go to state 6
    RIGHT_BRACKET     shift, and go to state 48
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr         go to state 49
    primary      go to state 29
    lvalue       go to state 30
    member       go to state 31
    call         go to state 32
    elist        go to state 50
    objectdef    go to state 33
    indexed      go to state 51
    indexedelem  go to state 52
    const        go to state 37


State 7

   33 expr: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   44 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   57 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    FUNCTION          shift, and go to state 13
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr        go to state 53
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcprefix  go to state 35
    funcdef     go to state 54
    const       go to state 37


State 8

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 9

   48 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 55


State 10

   94 ifprefix: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 56


State 11

  101 whilestart: WHILE .

    $default  reduce using rule 101 (whilestart)


State 12

  107 forprefix: FOR . LEFT_PARENTHESIS elist SEMICOLON M expr $@7 SEMICOLON
  109          | FOR . LEFT_PARENTHESIS SEMICOLON M expr $@8 SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 57


State 13

   79 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 58

    $default  reduce using rule 78 (funcname)

    funcname  go to state 59


State 14

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 15

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 16

  112 returnstmt: RETURN . SEMICOLON
  113           | RETURN . expr SEMICOLON

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 62
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 63
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 17

   35 expr: NOT . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 64
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 18

   47 lvalue: LOCAL . ID

    ID  shift, and go to state 65


State 19

   90 const: TRUE .

    $default  reduce using rule 90 (const)


State 20

   91 const: FALSE .

    $default  reduce using rule 91 (const)


State 21

   89 const: NIL .

    $default  reduce using rule 89 (const)


State 22

   34 expr: MINUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 66
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 23

   36 expr: PLUS_PLUS . lvalue

    ID                shift, and go to state 3
    LEFT_PARENTHESIS  shift, and go to state 67
    DOUBLE_COLON      shift, and go to state 9
    LOCAL             shift, and go to state 18

    lvalue  go to state 68
    member  go to state 31
    call    go to state 69


State 24

   38 expr: MINUS_MINUS . lvalue

    ID                shift, and go to state 3
    LEFT_PARENTHESIS  shift, and go to state 67
    DOUBLE_COLON      shift, and go to state 9
    LOCAL             shift, and go to state 18

    lvalue  go to state 70
    member  go to state 31
    call    go to state 69


State 25

    0 $accept: program . $end

    $end  shift, and go to state 71


State 26

   14 stmts: stmt .

    $default  reduce using rule 14 (stmts)


State 27

    1 program: stmts .
   13 stmts: stmts . stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    RETURN            shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 72
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    whilestart  go to state 40
    whilestmt   go to state 41
    forprefix   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 28

    3 stmt: expr . SEMICOLON
   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    SEMICOLON      shift, and go to state 73
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86


State 29

   40 expr: primary .

    $default  reduce using rule 40 (expr)


State 30

   15 expr: lvalue . ASSIGN expr
   37     | lvalue . PLUS_PLUS
   39     | lvalue . MINUS_MINUS
   41 primary: lvalue .
   50 member: lvalue . FULLSTOP ID
   51       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 87
    LEFT_PARENTHESIS  shift, and go to state 88
    FULLSTOP          shift, and go to state 89
    DOUBLE_FULLSTOP   shift, and go to state 90
    ASSIGN            shift, and go to state 91
    PLUS_PLUS         shift, and go to state 92
    MINUS_MINUS       shift, and go to state 93

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 31

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 32

   42 primary: call .
   52 member: call . FULLSTOP ID
   53       | call . LEFT_BRACKET expr RIGHT_BRACKET
   54 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   55     | call . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 97
    LEFT_PARENTHESIS  shift, and go to state 98
    FULLSTOP          shift, and go to state 99

    $default  reduce using rule 42 (primary)


State 33

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 34

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 35

   85 funcdef: funcprefix . funcargs funcblockstart funcbody funcblockend

    LEFT_PARENTHESIS  shift, and go to state 100

    funcargs  go to state 101


State 36

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 37

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 38

   96 ifstmt: ifprefix . stmt elseprefix stmt
   97       | ifprefix . stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    RETURN            shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 102
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    whilestart  go to state 40
    whilestmt   go to state 41
    forprefix   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 39

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 40

  103 whilestmt: whilestart . whilecond loopstmt

    LEFT_PARENTHESIS  shift, and go to state 103

    whilecond  go to state 104


State 41

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 42

  110 forstmt: forprefix . N elist RIGHT_PARENTHESIS N loopstmt N
  111        | forprefix . N RIGHT_PARENTHESIS N loopstmt N

    $default  reduce using rule 104 (N)

    N  go to state 105


State 43

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 44

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 45

   74 block: LEFT_BRACE $@5 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 106


State 46

   76 block: LEFT_BRACE $@6 . stmts RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    RETURN            shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 26
    stmts       go to state 107
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    whilestart  go to state 40
    whilestmt   go to state 41
    forprefix   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 47

   72 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 108
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 48

   69 objectdef: LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 69 (objectdef)


State 49

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   65 elist: expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 65 (elist)


State 50

   66 elist: elist . COMMA expr
   68 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 109
    COMMA          shift, and go to state 110


State 51

   67 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET
   71 indexed: indexed . COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 111
    COMMA          shift, and go to state 112


State 52

   70 indexed: indexedelem .

    $default  reduce using rule 70 (indexed)


State 53

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   33     | LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 113
    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MUL                shift, and go to state 78
    DIV                shift, and go to state 79
    MODULO             shift, and go to state 80
    EQUAL              shift, and go to state 81
    NOT_EQUAL          shift, and go to state 82
    GREATER            shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS               shift, and go to state 85
    LESS_EQUAL         shift, and go to state 86


State 54

   44 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   57 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 114


State 55

   48 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 48 (lvalue)


State 56

   94 ifprefix: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 115
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 57

  107 forprefix: FOR LEFT_PARENTHESIS . elist SEMICOLON M expr $@7 SEMICOLON
  109          | FOR LEFT_PARENTHESIS . SEMICOLON M expr $@8 SEMICOLON

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 116
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 49
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 117
    objectdef  go to state 33
    const      go to state 37


State 58

   77 funcname: ID .

    $default  reduce using rule 77 (funcname)


State 59

   79 funcprefix: FUNCTION funcname .

    $default  reduce using rule 79 (funcprefix)


State 60

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 61

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 62

  112 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 112 (returnstmt)


State 63

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
  113 returnstmt: RETURN expr . SEMICOLON

    SEMICOLON      shift, and go to state 118
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86


State 64

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   35     | NOT expr .

    $default  reduce using rule 35 (expr)


State 65

   47 lvalue: LOCAL ID .

    $default  reduce using rule 47 (lvalue)


State 66

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   34     | MINUS expr .

    $default  reduce using rule 34 (expr)


State 67

   57 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 13

    funcprefix  go to state 35
    funcdef     go to state 119


State 68

   36 expr: PLUS_PLUS lvalue .
   50 member: lvalue . FULLSTOP ID
   51       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 87
    LEFT_PARENTHESIS  shift, and go to state 88
    FULLSTOP          shift, and go to state 89
    DOUBLE_FULLSTOP   shift, and go to state 90

    $default  reduce using rule 36 (expr)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 69

   52 member: call . FULLSTOP ID
   53       | call . LEFT_BRACKET expr RIGHT_BRACKET
   54 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   55     | call . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 97
    LEFT_PARENTHESIS  shift, and go to state 98
    FULLSTOP          shift, and go to state 99


State 70

   38 expr: MINUS_MINUS lvalue .
   50 member: lvalue . FULLSTOP ID
   51       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 87
    LEFT_PARENTHESIS  shift, and go to state 88
    FULLSTOP          shift, and go to state 89
    DOUBLE_FULLSTOP   shift, and go to state 90

    $default  reduce using rule 38 (expr)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 71

    0 $accept: program $end .

    $default  accept


State 72

   13 stmts: stmts stmt .

    $default  reduce using rule 13 (stmts)


State 73

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 74

   19 expr: expr AND . $@2 M expr

    $default  reduce using rule 18 ($@2)

    $@2  go to state 120


State 75

   17 expr: expr OR . $@1 M expr

    $default  reduce using rule 16 ($@1)

    $@1  go to state 121


State 76

   28 expr: expr PLUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 122
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 77

   29 expr: expr MINUS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 123
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 78

   30 expr: expr MUL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 124
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 79

   31 expr: expr DIV . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 125
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 80

   32 expr: expr MODULO . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 126
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 81

   23 expr: expr EQUAL . $@4 expr

    $default  reduce using rule 22 ($@4)

    $@4  go to state 127


State 82

   21 expr: expr NOT_EQUAL . $@3 expr

    $default  reduce using rule 20 ($@3)

    $@3  go to state 128


State 83

   27 expr: expr GREATER . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 129
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 84

   26 expr: expr GREATER_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 130
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 85

   25 expr: expr LESS . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 131
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 86

   24 expr: expr LESS_EQUAL . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 132
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 87

   51 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 133
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 88

   61 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS
   62         | LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    INTEGER            shift, and go to state 1
    REAL               shift, and go to state 2
    ID                 shift, and go to state 3
    STRING             shift, and go to state 4
    LEFT_BRACKET       shift, and go to state 6
    LEFT_PARENTHESIS   shift, and go to state 7
    RIGHT_PARENTHESIS  shift, and go to state 134
    DOUBLE_COLON       shift, and go to state 9
    NOT                shift, and go to state 17
    LOCAL              shift, and go to state 18
    TRUE               shift, and go to state 19
    FALSE              shift, and go to state 20
    NIL                shift, and go to state 21
    MINUS              shift, and go to state 22
    PLUS_PLUS          shift, and go to state 23
    MINUS_MINUS        shift, and go to state 24

    expr       go to state 49
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 135
    objectdef  go to state 33
    const      go to state 37


State 89

   50 member: lvalue FULLSTOP . ID

    ID  shift, and go to state 136


State 90

   63 methodcall: DOUBLE_FULLSTOP . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   64           | DOUBLE_FULLSTOP . ID LEFT_PARENTHESIS RIGHT_PARENTHESIS

    ID  shift, and go to state 137


State 91

   15 expr: lvalue ASSIGN . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 138
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 92

   37 expr: lvalue PLUS_PLUS .

    $default  reduce using rule 37 (expr)


State 93

   39 expr: lvalue MINUS_MINUS .

    $default  reduce using rule 39 (expr)


State 94

   56 call: lvalue callsuffix .

    $default  reduce using rule 56 (call)


State 95

   59 callsuffix: normcall .

    $default  reduce using rule 59 (callsuffix)


State 96

   60 callsuffix: methodcall .

    $default  reduce using rule 60 (callsuffix)


State 97

   53 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 139
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 98

   54 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS
   55     | call LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    INTEGER            shift, and go to state 1
    REAL               shift, and go to state 2
    ID                 shift, and go to state 3
    STRING             shift, and go to state 4
    LEFT_BRACKET       shift, and go to state 6
    LEFT_PARENTHESIS   shift, and go to state 7
    RIGHT_PARENTHESIS  shift, and go to state 140
    DOUBLE_COLON       shift, and go to state 9
    NOT                shift, and go to state 17
    LOCAL              shift, and go to state 18
    TRUE               shift, and go to state 19
    FALSE              shift, and go to state 20
    NIL                shift, and go to state 21
    MINUS              shift, and go to state 22
    PLUS_PLUS          shift, and go to state 23
    MINUS_MINUS        shift, and go to state 24

    expr       go to state 49
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 141
    objectdef  go to state 33
    const      go to state 37


State 99

   52 member: call FULLSTOP . ID

    ID  shift, and go to state 142


State 100

   80 funcargs: LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS
   81         | LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    ID                 shift, and go to state 143
    RIGHT_PARENTHESIS  shift, and go to state 144

    idlist  go to state 145


State 101

   85 funcdef: funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 83 (funcblockstart)

    funcblockstart  go to state 146


State 102

   96 ifstmt: ifprefix stmt . elseprefix stmt
   97       | ifprefix stmt .

    ELSE  shift, and go to state 147

    ELSE      [reduce using rule 97 (ifstmt)]
    $default  reduce using rule 97 (ifstmt)

    elseprefix  go to state 148


State 103

  102 whilecond: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 149
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 104

  103 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 98 (loopstart)

    loopstart  go to state 150
    loopstmt   go to state 151


State 105

  110 forstmt: forprefix N . elist RIGHT_PARENTHESIS N loopstmt N
  111        | forprefix N . RIGHT_PARENTHESIS N loopstmt N

    INTEGER            shift, and go to state 1
    REAL               shift, and go to state 2
    ID                 shift, and go to state 3
    STRING             shift, and go to state 4
    LEFT_BRACKET       shift, and go to state 6
    LEFT_PARENTHESIS   shift, and go to state 7
    RIGHT_PARENTHESIS  shift, and go to state 152
    DOUBLE_COLON       shift, and go to state 9
    NOT                shift, and go to state 17
    LOCAL              shift, and go to state 18
    TRUE               shift, and go to state 19
    FALSE              shift, and go to state 20
    NIL                shift, and go to state 21
    MINUS              shift, and go to state 22
    PLUS_PLUS          shift, and go to state 23
    MINUS_MINUS        shift, and go to state 24

    expr       go to state 49
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 153
    objectdef  go to state 33
    const      go to state 37


State 106

   74 block: LEFT_BRACE $@5 RIGHT_BRACE .

    $default  reduce using rule 74 (block)


State 107

   13 stmts: stmts . stmt
   76 block: LEFT_BRACE $@6 stmts . RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    RIGHT_BRACE       shift, and go to state 154
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    RETURN            shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 72
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    whilestart  go to state 40
    whilestmt   go to state 41
    forprefix   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 108

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   72 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    COLON          shift, and go to state 155
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86


State 109

   68 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 68 (objectdef)


State 110

   66 elist: elist COMMA . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 156
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 111

   67 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 67 (objectdef)


State 112

   71 indexed: indexed COMMA . indexedelem

    LEFT_BRACE  shift, and go to state 47

    indexedelem  go to state 157


State 113

   33 expr: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 33 (expr)


State 114

   44 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   57 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 158

    $default  reduce using rule 44 (primary)


State 115

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   94 ifprefix: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 159
    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MUL                shift, and go to state 78
    DIV                shift, and go to state 79
    MODULO             shift, and go to state 80
    EQUAL              shift, and go to state 81
    NOT_EQUAL          shift, and go to state 82
    GREATER            shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS               shift, and go to state 85
    LESS_EQUAL         shift, and go to state 86


State 116

  109 forprefix: FOR LEFT_PARENTHESIS SEMICOLON . M expr $@8 SEMICOLON

    $default  reduce using rule 105 (M)

    M  go to state 160


State 117

   66 elist: elist . COMMA expr
  107 forprefix: FOR LEFT_PARENTHESIS elist . SEMICOLON M expr $@7 SEMICOLON

    SEMICOLON  shift, and go to state 161
    COMMA      shift, and go to state 110


State 118

  113 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 113 (returnstmt)


State 119

   57 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 162


State 120

   19 expr: expr AND $@2 . M expr

    $default  reduce using rule 105 (M)

    M  go to state 163


State 121

   17 expr: expr OR $@1 . M expr

    $default  reduce using rule 105 (M)

    M  go to state 164


State 122

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   28     | expr PLUS expr .
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    $default  reduce using rule 28 (expr)


State 123

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   29     | expr MINUS expr .
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    $default  reduce using rule 29 (expr)


State 124

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   30     | expr MUL expr .
   31     | expr . DIV expr
   32     | expr . MODULO expr

    $default  reduce using rule 30 (expr)


State 125

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   31     | expr DIV expr .
   32     | expr . MODULO expr

    $default  reduce using rule 31 (expr)


State 126

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   32     | expr MODULO expr .

    $default  reduce using rule 32 (expr)


State 127

   23 expr: expr EQUAL $@4 . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 165
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 128

   21 expr: expr NOT_EQUAL $@3 . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 166
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 129

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   27     | expr GREATER expr .
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 27 (expr)


State 130

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   26     | expr GREATER_EQUAL expr .
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 26 (expr)


State 131

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   25     | expr LESS expr .
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 132

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   24     | expr LESS_EQUAL expr .
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 133

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   51 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 167
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86


State 134

   62 normcall: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 62 (normcall)


State 135

   61 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   66 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 168
    COMMA              shift, and go to state 110


State 136

   50 member: lvalue FULLSTOP ID .

    $default  reduce using rule 50 (member)


State 137

   63 methodcall: DOUBLE_FULLSTOP ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   64           | DOUBLE_FULLSTOP ID . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 169


State 138

   15 expr: lvalue ASSIGN expr .
   17     | expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 15 (expr)


State 139

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   53 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 170
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86


State 140

   55 call: call LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 55 (call)


State 141

   54 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   66 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 171
    COMMA              shift, and go to state 110


State 142

   52 member: call FULLSTOP ID .

    $default  reduce using rule 52 (member)


State 143

   92 idlist: ID .

    $default  reduce using rule 92 (idlist)


State 144

   81 funcargs: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 81 (funcargs)


State 145

   80 funcargs: LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS
   93 idlist: idlist . COMMA ID

    RIGHT_PARENTHESIS  shift, and go to state 172
    COMMA              shift, and go to state 173


State 146

   85 funcdef: funcprefix funcargs funcblockstart . funcbody funcblockend

    LEFT_BRACE  shift, and go to state 5

    block     go to state 174
    funcbody  go to state 175


State 147

   95 elseprefix: ELSE .

    $default  reduce using rule 95 (elseprefix)


State 148

   96 ifstmt: ifprefix stmt elseprefix . stmt

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    RETURN            shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 176
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    whilestart  go to state 40
    whilestmt   go to state 41
    forprefix   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 149

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
  102 whilecond: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 177
    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MUL                shift, and go to state 78
    DIV                shift, and go to state 79
    MODULO             shift, and go to state 80
    EQUAL              shift, and go to state 81
    NOT_EQUAL          shift, and go to state 82
    GREATER            shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS               shift, and go to state 85
    LESS_EQUAL         shift, and go to state 86


State 150

  100 loopstmt: loopstart . stmt loopend

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACE        shift, and go to state 5
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    SEMICOLON         shift, and go to state 8
    DOUBLE_COLON      shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    RETURN            shift, and go to state 16
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    stmt        go to state 178
    expr        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    whilestart  go to state 40
    whilestmt   go to state 41
    forprefix   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 151

  103 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 103 (whilestmt)


State 152

  111 forstmt: forprefix N RIGHT_PARENTHESIS . N loopstmt N

    $default  reduce using rule 104 (N)

    N  go to state 179


State 153

   66 elist: elist . COMMA expr
  110 forstmt: forprefix N elist . RIGHT_PARENTHESIS N loopstmt N

    RIGHT_PARENTHESIS  shift, and go to state 180
    COMMA              shift, and go to state 110


State 154

   76 block: LEFT_BRACE $@6 stmts RIGHT_BRACE .

    $default  reduce using rule 76 (block)


State 155

   72 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 181
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 156

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   66 elist: elist COMMA expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 66 (elist)


State 157

   71 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 71 (indexed)


State 158

   57 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    INTEGER            shift, and go to state 1
    REAL               shift, and go to state 2
    ID                 shift, and go to state 3
    STRING             shift, and go to state 4
    LEFT_BRACKET       shift, and go to state 6
    LEFT_PARENTHESIS   shift, and go to state 7
    RIGHT_PARENTHESIS  shift, and go to state 182
    DOUBLE_COLON       shift, and go to state 9
    NOT                shift, and go to state 17
    LOCAL              shift, and go to state 18
    TRUE               shift, and go to state 19
    FALSE              shift, and go to state 20
    NIL                shift, and go to state 21
    MINUS              shift, and go to state 22
    PLUS_PLUS          shift, and go to state 23
    MINUS_MINUS        shift, and go to state 24

    expr       go to state 49
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 183
    objectdef  go to state 33
    const      go to state 37


State 159

   94 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 94 (ifprefix)


State 160

  109 forprefix: FOR LEFT_PARENTHESIS SEMICOLON M . expr $@8 SEMICOLON

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 184
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 161

  107 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON . M expr $@7 SEMICOLON

    $default  reduce using rule 105 (M)

    M  go to state 185


State 162

   57 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 158


State 163

   19 expr: expr AND $@2 M . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 186
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 164

   17 expr: expr OR $@1 M . expr

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 187
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 165

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   23     | expr EQUAL $@4 expr .
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 166

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   21     | expr NOT_EQUAL $@3 expr .
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 167

   51 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 51 (member)


State 168

   61 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 61 (normcall)


State 169

   63 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS
   64           | DOUBLE_FULLSTOP ID LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    INTEGER            shift, and go to state 1
    REAL               shift, and go to state 2
    ID                 shift, and go to state 3
    STRING             shift, and go to state 4
    LEFT_BRACKET       shift, and go to state 6
    LEFT_PARENTHESIS   shift, and go to state 7
    RIGHT_PARENTHESIS  shift, and go to state 188
    DOUBLE_COLON       shift, and go to state 9
    NOT                shift, and go to state 17
    LOCAL              shift, and go to state 18
    TRUE               shift, and go to state 19
    FALSE              shift, and go to state 20
    NIL                shift, and go to state 21
    MINUS              shift, and go to state 22
    PLUS_PLUS          shift, and go to state 23
    MINUS_MINUS        shift, and go to state 24

    expr       go to state 49
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    elist      go to state 189
    objectdef  go to state 33
    const      go to state 37


State 170

   53 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 53 (member)


State 171

   54 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 54 (call)


State 172

   80 funcargs: LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS .

    $default  reduce using rule 80 (funcargs)


State 173

   93 idlist: idlist COMMA . ID

    ID  shift, and go to state 190


State 174

   82 funcbody: block .

    $default  reduce using rule 82 (funcbody)


State 175

   85 funcdef: funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 84 (funcblockend)

    funcblockend  go to state 191


State 176

   96 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 96 (ifstmt)


State 177

  102 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 102 (whilecond)


State 178

  100 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 99 (loopend)

    loopend  go to state 192


State 179

  111 forstmt: forprefix N RIGHT_PARENTHESIS N . loopstmt N

    $default  reduce using rule 98 (loopstart)

    loopstart  go to state 150
    loopstmt   go to state 193


State 180

  110 forstmt: forprefix N elist RIGHT_PARENTHESIS . N loopstmt N

    $default  reduce using rule 104 (N)

    N  go to state 194


State 181

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
   72 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    RIGHT_BRACE    shift, and go to state 195
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86


State 182

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (call)


State 183

   57 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   66 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 196
    COMMA              shift, and go to state 110


State 184

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
  109 forprefix: FOR LEFT_PARENTHESIS SEMICOLON M expr . $@8 SEMICOLON

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 108 ($@8)

    $@8  go to state 197


State 185

  107 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M . expr $@7 SEMICOLON

    INTEGER           shift, and go to state 1
    REAL              shift, and go to state 2
    ID                shift, and go to state 3
    STRING            shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 6
    LEFT_PARENTHESIS  shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 9
    NOT               shift, and go to state 17
    LOCAL             shift, and go to state 18
    TRUE              shift, and go to state 19
    FALSE             shift, and go to state 20
    NIL               shift, and go to state 21
    MINUS             shift, and go to state 22
    PLUS_PLUS         shift, and go to state 23
    MINUS_MINUS       shift, and go to state 24

    expr       go to state 198
    primary    go to state 29
    lvalue     go to state 30
    member     go to state 31
    call       go to state 32
    objectdef  go to state 33
    const      go to state 37


State 186

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   19     | expr AND $@2 M expr .
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 19 (expr)


State 187

   17 expr: expr . OR $@1 M expr
   17     | expr OR $@1 M expr .
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr

    AND            shift, and go to state 74
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 17 (expr)


State 188

   64 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 64 (methodcall)


State 189

   63 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   66 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 199
    COMMA              shift, and go to state 110


State 190

   93 idlist: idlist COMMA ID .

    $default  reduce using rule 93 (idlist)


State 191

   85 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 85 (funcdef)


State 192

  100 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 100 (loopstmt)


State 193

  111 forstmt: forprefix N RIGHT_PARENTHESIS N loopstmt . N

    $default  reduce using rule 104 (N)

    N  go to state 200


State 194

  110 forstmt: forprefix N elist RIGHT_PARENTHESIS N . loopstmt N

    $default  reduce using rule 98 (loopstart)

    loopstart  go to state 150
    loopstmt   go to state 201


State 195

   72 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 72 (indexedelem)


State 196

   57 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (call)


State 197

  109 forprefix: FOR LEFT_PARENTHESIS SEMICOLON M expr $@8 . SEMICOLON

    SEMICOLON  shift, and go to state 202


State 198

   17 expr: expr . OR $@1 M expr
   19     | expr . AND $@2 M expr
   21     | expr . NOT_EQUAL $@3 expr
   23     | expr . EQUAL $@4 expr
   24     | expr . LESS_EQUAL expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . GREATER expr
   28     | expr . PLUS expr
   29     | expr . MINUS expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . MODULO expr
  107 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr . $@7 SEMICOLON

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 106 ($@7)

    $@7  go to state 203


State 199

   63 methodcall: DOUBLE_FULLSTOP ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 63 (methodcall)


State 200

  111 forstmt: forprefix N RIGHT_PARENTHESIS N loopstmt N .

    $default  reduce using rule 111 (forstmt)


State 201

  110 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt . N

    $default  reduce using rule 104 (N)

    N  go to state 204


State 202

  109 forprefix: FOR LEFT_PARENTHESIS SEMICOLON M expr $@8 SEMICOLON .

    $default  reduce using rule 109 (forprefix)


State 203

  107 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr $@7 . SEMICOLON

    SEMICOLON  shift, and go to state 205


State 204

  110 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N .

    $default  reduce using rule 110 (forstmt)


State 205

  107 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr $@7 SEMICOLON .

    $default  reduce using rule 107 (forprefix)
