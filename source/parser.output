Nonterminals useless in grammar

    indexedelem


Terminals unused in grammar

    REAL
    COLON
    DOUBLE_FULLSTOP


Rules useless in grammar

   75 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE


Rules useless in parser due to conflicts

   60 indexed: %empty


State 5 conflicts: 1 shift/reduce
State 13 conflicts: 14 shift/reduce
State 29 conflicts: 5 shift/reduce
State 31 conflicts: 2 shift/reduce
State 52 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmt: expr SEMICOLON
    3     | ifstmt
    4     | whilestmt
    5     | forstmt
    6     | returnstmt
    7     | BREAK SEMICOLON
    8     | CONTINUE SEMICOLON
    9     | block
   10     | funcdef
   11     | SEMICOLON

   12 stmts: stmts stmt
   13      | stmt

   14 expr: lvalue ASSIGN expr
   15     | expr OR expr
   16     | expr AND expr
   17     | expr NOT_EQUAL expr
   18     | expr EQUAL expr
   19     | expr LESS_EQUAL expr
   20     | expr LESS expr
   21     | expr GREATER_EQUAL expr
   22     | expr GREATER expr
   23     | expr PLUS expr
   24     | expr MINUS expr
   25     | expr MUL expr
   26     | expr DIV expr
   27     | expr MODULO expr
   28     | LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   29     | MINUS expr
   30     | NOT expr
   31     | PLUS_PLUS lvalue
   32     | lvalue PLUS_PLUS
   33     | MINUS_MINUS lvalue
   34     | lvalue MINUS_MINUS
   35     | primary

   36 primary: lvalue
   37        | call
   38        | objectdef
   39        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   40        | const

   41 lvalue: ID
   42       | LOCAL ID
   43       | DOUBLE_COLON ID
   44       | member

   45 member: lvalue FULLSTOP ID
   46       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   47       | call FULLSTOP ID
   48       | call LEFT_BRACKET expr RIGHT_BRACKET

   49 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   50     | lvalue callsuffix
   51     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   52 callsuffix: normcall
   53           | methodcall

   54 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   55 methodcall: DOUBLE_COLON ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   56 elist: expr COMMA expr

   57 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET
   58          | LEFT_BRACKET elist RIGHT_BRACKET
   59          | LEFT_BRACKET RIGHT_BRACKET

   60 indexed: %empty

   61 block: LEFT_BRACE RIGHT_BRACE

   62 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

   63 const: INTEGER
   64      | STRING
   65      | NIL
   66      | TRUE
   67      | FALSE

   68 idlist: %empty

   69 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   70       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

   71 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

   73 returnstmt: RETURN
   74           | RETURN expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <int_value> (258) 63
    REAL <real_value> (259)
    ID <string_value> (260) 41 42 43 45 47 55 62
    STRING <string_value> (261) 64
    LEFT_BRACE <string_value> (262) 61
    RIGHT_BRACE <string_value> (263) 61
    LEFT_BRACKET <string_value> (264) 46 48 57 58 59
    RIGHT_BRACKET <string_value> (265) 46 48 57 58 59
    LEFT_PARENTHESIS <string_value> (266) 28 39 49 51 54 55 62 69 70 71 72
    RIGHT_PARENTHESIS <string_value> (267) 28 39 49 51 54 55 62 69 70 71 72
    SEMICOLON <string_value> (268) 2 7 8 11 72
    COMMA <string_value> (269) 56
    FULLSTOP <string_value> (270) 45 47
    COLON <string_value> (271)
    DOUBLE_FULLSTOP <string_value> (272)
    DOUBLE_COLON <string_value> (273) 43 55
    IF <string_value> (274) 69 70
    ELSE <string_value> (275) 70
    WHILE <string_value> (276) 71
    FOR <string_value> (277) 72
    FUNCTION <string_value> (278) 62
    RETURN <string_value> (279) 73 74
    BREAK <string_value> (280) 7
    CONTINUE <string_value> (281) 8
    AND <string_value> (282) 16
    NOT <string_value> (283) 30
    OR <string_value> (284) 15
    LOCAL <string_value> (285) 42
    TRUE <string_value> (286) 66
    FALSE <string_value> (287) 67
    NIL <string_value> (288) 65
    ASSIGN <string_value> (289) 14
    PLUS <string_value> (290) 23
    MINUS <string_value> (291) 24 29
    MUL <string_value> (292) 25
    DIV <string_value> (293) 26
    MODULO <string_value> (294) 27
    EQUAL <string_value> (295) 18
    NOT_EQUAL <string_value> (296) 17
    PLUS_PLUS <string_value> (297) 31 32
    MINUS_MINUS <string_value> (298) 33 34
    GREATER <string_value> (299) 22
    GREATER_EQUAL <string_value> (300) 21
    LESS <string_value> (301) 20
    LESS_EQUAL <string_value> (302) 19
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    stmt (51)
        on left: 2 3 4 5 6 7 8 9 10 11
        on right: 12 13 69 70 71 72
    stmts (52)
        on left: 12 13
        on right: 1 12
    expr (53)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 2 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 46 48 56 69 70 71 72 74
    primary (54)
        on left: 36 37 38 39 40
        on right: 35
    lvalue (55)
        on left: 41 42 43 44
        on right: 14 31 32 33 34 36 45 46 50
    member (56)
        on left: 45 46 47 48
        on right: 44
    call (57)
        on left: 49 50 51
        on right: 37 47 48 49
    callsuffix (58)
        on left: 52 53
        on right: 50
    normcall (59)
        on left: 54
        on right: 52
    methodcall (60)
        on left: 55
        on right: 53
    elist (61)
        on left: 56
        on right: 49 51 54 55 58 72
    objectdef (62)
        on left: 57 58 59
        on right: 38
    indexed (63)
        on left: 60
        on right: 57
    block (64)
        on left: 61
        on right: 9 62
    funcdef (65)
        on left: 62
        on right: 10 39 51
    const (66)
        on left: 63 64 65 66 67
        on right: 40
    idlist (67)
        on left: 68
        on right: 62
    ifstmt (68)
        on left: 69 70
        on right: 3
    whilestmt (69)
        on left: 71
        on right: 4
    forstmt (70)
        on left: 72
        on right: 5
    returnstmt (71)
        on left: 73 74
        on right: 6


State 0

    0 $accept: . program $end

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACE        shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    SEMICOLON         shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 8
    IF                shift, and go to state 9
    WHILE             shift, and go to state 10
    FOR               shift, and go to state 11
    FUNCTION          shift, and go to state 12
    RETURN            shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    program     go to state 24
    stmt        go to state 25
    stmts       go to state 26
    expr        go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 1

   63 const: INTEGER .

    $default  reduce using rule 63 (const)


State 2

   41 lvalue: ID .

    $default  reduce using rule 41 (lvalue)


State 3

   64 const: STRING .

    $default  reduce using rule 64 (const)


State 4

   61 block: LEFT_BRACE . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 40


State 5

   57 objectdef: LEFT_BRACKET . indexed RIGHT_BRACKET
   58          | LEFT_BRACKET . elist RIGHT_BRACKET
   59          | LEFT_BRACKET . RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    RIGHT_BRACKET     shift, and go to state 41
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    RIGHT_BRACKET  [reduce using rule 60 (indexed)]

    expr       go to state 42
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    elist      go to state 43
    objectdef  go to state 32
    indexed    go to state 44
    const      go to state 35


State 6

   28 expr: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   39 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   51 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    FUNCTION          shift, and go to state 12
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 45
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    funcdef    go to state 46
    const      go to state 35


State 7

   11 stmt: SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 8

   43 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 47


State 9

   69 ifstmt: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   70       | IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt

    LEFT_PARENTHESIS  shift, and go to state 48


State 10

   71 whilestmt: WHILE . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 49


State 11

   72 forstmt: FOR . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 50


State 12

   62 funcdef: FUNCTION . ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 51


State 13

   73 returnstmt: RETURN .
   74           | RETURN . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    INTEGER           [reduce using rule 73 (returnstmt)]
    ID                [reduce using rule 73 (returnstmt)]
    STRING            [reduce using rule 73 (returnstmt)]
    LEFT_BRACKET      [reduce using rule 73 (returnstmt)]
    LEFT_PARENTHESIS  [reduce using rule 73 (returnstmt)]
    DOUBLE_COLON      [reduce using rule 73 (returnstmt)]
    NOT               [reduce using rule 73 (returnstmt)]
    LOCAL             [reduce using rule 73 (returnstmt)]
    TRUE              [reduce using rule 73 (returnstmt)]
    FALSE             [reduce using rule 73 (returnstmt)]
    NIL               [reduce using rule 73 (returnstmt)]
    MINUS             [reduce using rule 73 (returnstmt)]
    PLUS_PLUS         [reduce using rule 73 (returnstmt)]
    MINUS_MINUS       [reduce using rule 73 (returnstmt)]
    $default          reduce using rule 73 (returnstmt)

    expr       go to state 52
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 14

    7 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 15

    8 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 16

   30 expr: NOT . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 55
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 17

   42 lvalue: LOCAL . ID

    ID  shift, and go to state 56


State 18

   66 const: TRUE .

    $default  reduce using rule 66 (const)


State 19

   67 const: FALSE .

    $default  reduce using rule 67 (const)


State 20

   65 const: NIL .

    $default  reduce using rule 65 (const)


State 21

   29 expr: MINUS . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 57
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 22

   31 expr: PLUS_PLUS . lvalue

    ID                shift, and go to state 2
    LEFT_PARENTHESIS  shift, and go to state 58
    DOUBLE_COLON      shift, and go to state 8
    LOCAL             shift, and go to state 17

    lvalue  go to state 59
    member  go to state 30
    call    go to state 60


State 23

   33 expr: MINUS_MINUS . lvalue

    ID                shift, and go to state 2
    LEFT_PARENTHESIS  shift, and go to state 58
    DOUBLE_COLON      shift, and go to state 8
    LOCAL             shift, and go to state 17

    lvalue  go to state 61
    member  go to state 30
    call    go to state 60


State 24

    0 $accept: program . $end

    $end  shift, and go to state 62


State 25

   13 stmts: stmt .

    $default  reduce using rule 13 (stmts)


State 26

    1 program: stmts .
   12 stmts: stmts . stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACE        shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    SEMICOLON         shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 8
    IF                shift, and go to state 9
    WHILE             shift, and go to state 10
    FOR               shift, and go to state 11
    FUNCTION          shift, and go to state 12
    RETURN            shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 1 (program)

    stmt        go to state 63
    expr        go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 27

    2 stmt: expr . SEMICOLON
   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    SEMICOLON      shift, and go to state 64
    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77


State 28

   35 expr: primary .

    $default  reduce using rule 35 (expr)


State 29

   14 expr: lvalue . ASSIGN expr
   32     | lvalue . PLUS_PLUS
   34     | lvalue . MINUS_MINUS
   36 primary: lvalue .
   45 member: lvalue . FULLSTOP ID
   46       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 78
    LEFT_PARENTHESIS  shift, and go to state 79
    FULLSTOP          shift, and go to state 80
    DOUBLE_COLON      shift, and go to state 81
    ASSIGN            shift, and go to state 82
    PLUS_PLUS         shift, and go to state 83
    MINUS_MINUS       shift, and go to state 84

    LEFT_BRACKET      [reduce using rule 36 (primary)]
    LEFT_PARENTHESIS  [reduce using rule 36 (primary)]
    DOUBLE_COLON      [reduce using rule 36 (primary)]
    PLUS_PLUS         [reduce using rule 36 (primary)]
    MINUS_MINUS       [reduce using rule 36 (primary)]
    $default          reduce using rule 36 (primary)

    callsuffix  go to state 85
    normcall    go to state 86
    methodcall  go to state 87


State 30

   44 lvalue: member .

    $default  reduce using rule 44 (lvalue)


State 31

   37 primary: call .
   47 member: call . FULLSTOP ID
   48       | call . LEFT_BRACKET expr RIGHT_BRACKET
   49 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 88
    LEFT_PARENTHESIS  shift, and go to state 89
    FULLSTOP          shift, and go to state 90

    LEFT_BRACKET      [reduce using rule 37 (primary)]
    LEFT_PARENTHESIS  [reduce using rule 37 (primary)]
    $default          reduce using rule 37 (primary)


State 32

   38 primary: objectdef .

    $default  reduce using rule 38 (primary)


State 33

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 34

   10 stmt: funcdef .

    $default  reduce using rule 10 (stmt)


State 35

   40 primary: const .

    $default  reduce using rule 40 (primary)


State 36

    3 stmt: ifstmt .

    $default  reduce using rule 3 (stmt)


State 37

    4 stmt: whilestmt .

    $default  reduce using rule 4 (stmt)


State 38

    5 stmt: forstmt .

    $default  reduce using rule 5 (stmt)


State 39

    6 stmt: returnstmt .

    $default  reduce using rule 6 (stmt)


State 40

   61 block: LEFT_BRACE RIGHT_BRACE .

    $default  reduce using rule 61 (block)


State 41

   59 objectdef: LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 59 (objectdef)


State 42

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   56 elist: expr . COMMA expr

    COMMA          shift, and go to state 91
    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77


State 43

   58 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 92


State 44

   57 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 93


State 45

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   28     | LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 94
    AND                shift, and go to state 65
    OR                 shift, and go to state 66
    PLUS               shift, and go to state 67
    MINUS              shift, and go to state 68
    MUL                shift, and go to state 69
    DIV                shift, and go to state 70
    MODULO             shift, and go to state 71
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    GREATER            shift, and go to state 74
    GREATER_EQUAL      shift, and go to state 75
    LESS               shift, and go to state 76
    LESS_EQUAL         shift, and go to state 77


State 46

   39 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   51 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 95


State 47

   43 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 43 (lvalue)


State 48

   69 ifstmt: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt
   70       | IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt ELSE stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 96
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 49

   71 whilestmt: WHILE LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 97
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 50

   72 forstmt: FOR LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 42
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    elist      go to state 98
    objectdef  go to state 32
    const      go to state 35


State 51

   62 funcdef: FUNCTION ID . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 99


State 52

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   74 returnstmt: RETURN expr .

    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77

    MINUS     [reduce using rule 74 (returnstmt)]
    $default  reduce using rule 74 (returnstmt)


State 53

    7 stmt: BREAK SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 54

    8 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 55

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   30     | NOT expr .

    $default  reduce using rule 30 (expr)


State 56

   42 lvalue: LOCAL ID .

    $default  reduce using rule 42 (lvalue)


State 57

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   29     | MINUS expr .

    $default  reduce using rule 29 (expr)


State 58

   51 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 12

    funcdef  go to state 100


State 59

   31 expr: PLUS_PLUS lvalue .
   45 member: lvalue . FULLSTOP ID
   46       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 78
    LEFT_PARENTHESIS  shift, and go to state 79
    FULLSTOP          shift, and go to state 80
    DOUBLE_COLON      shift, and go to state 81

    DOUBLE_COLON  [reduce using rule 31 (expr)]
    $default      reduce using rule 31 (expr)

    callsuffix  go to state 85
    normcall    go to state 86
    methodcall  go to state 87


State 60

   47 member: call . FULLSTOP ID
   48       | call . LEFT_BRACKET expr RIGHT_BRACKET
   49 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 88
    LEFT_PARENTHESIS  shift, and go to state 89
    FULLSTOP          shift, and go to state 90


State 61

   33 expr: MINUS_MINUS lvalue .
   45 member: lvalue . FULLSTOP ID
   46       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 78
    LEFT_PARENTHESIS  shift, and go to state 79
    FULLSTOP          shift, and go to state 80
    DOUBLE_COLON      shift, and go to state 81

    DOUBLE_COLON  [reduce using rule 33 (expr)]
    $default      reduce using rule 33 (expr)

    callsuffix  go to state 85
    normcall    go to state 86
    methodcall  go to state 87


State 62

    0 $accept: program $end .

    $default  accept


State 63

   12 stmts: stmts stmt .

    $default  reduce using rule 12 (stmts)


State 64

    2 stmt: expr SEMICOLON .

    $default  reduce using rule 2 (stmt)


State 65

   16 expr: expr AND . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 101
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 66

   15 expr: expr OR . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 102
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 67

   23 expr: expr PLUS . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 103
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 68

   24 expr: expr MINUS . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 104
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 69

   25 expr: expr MUL . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 105
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 70

   26 expr: expr DIV . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 106
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 71

   27 expr: expr MODULO . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 107
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 72

   18 expr: expr EQUAL . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 108
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 73

   17 expr: expr NOT_EQUAL . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 109
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 74

   22 expr: expr GREATER . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 110
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 75

   21 expr: expr GREATER_EQUAL . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 111
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 76

   20 expr: expr LESS . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 112
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 77

   19 expr: expr LESS_EQUAL . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 113
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 78

   46 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 114
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 79

   54 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 42
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    elist      go to state 115
    objectdef  go to state 32
    const      go to state 35


State 80

   45 member: lvalue FULLSTOP . ID

    ID  shift, and go to state 116


State 81

   55 methodcall: DOUBLE_COLON . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 117


State 82

   14 expr: lvalue ASSIGN . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 118
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 83

   32 expr: lvalue PLUS_PLUS .

    $default  reduce using rule 32 (expr)


State 84

   34 expr: lvalue MINUS_MINUS .

    $default  reduce using rule 34 (expr)


State 85

   50 call: lvalue callsuffix .

    $default  reduce using rule 50 (call)


State 86

   52 callsuffix: normcall .

    $default  reduce using rule 52 (callsuffix)


State 87

   53 callsuffix: methodcall .

    $default  reduce using rule 53 (callsuffix)


State 88

   48 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 119
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 89

   49 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 42
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    elist      go to state 120
    objectdef  go to state 32
    const      go to state 35


State 90

   47 member: call FULLSTOP . ID

    ID  shift, and go to state 121


State 91

   56 elist: expr COMMA . expr

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 122
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 92

   58 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 58 (objectdef)


State 93

   57 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 57 (objectdef)


State 94

   28 expr: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 28 (expr)


State 95

   39 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    $default  reduce using rule 39 (primary)


State 96

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   69 ifstmt: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt
   70       | IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt ELSE stmt

    RIGHT_PARENTHESIS  shift, and go to state 124
    AND                shift, and go to state 65
    OR                 shift, and go to state 66
    PLUS               shift, and go to state 67
    MINUS              shift, and go to state 68
    MUL                shift, and go to state 69
    DIV                shift, and go to state 70
    MODULO             shift, and go to state 71
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    GREATER            shift, and go to state 74
    GREATER_EQUAL      shift, and go to state 75
    LESS               shift, and go to state 76
    LESS_EQUAL         shift, and go to state 77


State 97

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   71 whilestmt: WHILE LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 125
    AND                shift, and go to state 65
    OR                 shift, and go to state 66
    PLUS               shift, and go to state 67
    MINUS              shift, and go to state 68
    MUL                shift, and go to state 69
    DIV                shift, and go to state 70
    MODULO             shift, and go to state 71
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    GREATER            shift, and go to state 74
    GREATER_EQUAL      shift, and go to state 75
    LESS               shift, and go to state 76
    LESS_EQUAL         shift, and go to state 77


State 98

   72 forstmt: FOR LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 126


State 99

   62 funcdef: FUNCTION ID LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    $default  reduce using rule 68 (idlist)

    idlist  go to state 127


State 100

   51 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 128


State 101

   15 expr: expr . OR expr
   16     | expr . AND expr
   16     | expr AND expr .
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77

    $default  reduce using rule 16 (expr)


State 102

   15 expr: expr . OR expr
   15     | expr OR expr .
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    AND            shift, and go to state 65
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77

    $default  reduce using rule 15 (expr)


State 103

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   23     | expr PLUS expr .
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MODULO  shift, and go to state 71

    $default  reduce using rule 23 (expr)


State 104

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   24     | expr MINUS expr .
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MODULO  shift, and go to state 71

    $default  reduce using rule 24 (expr)


State 105

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   25     | expr MUL expr .
   26     | expr . DIV expr
   27     | expr . MODULO expr

    $default  reduce using rule 25 (expr)


State 106

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   26     | expr DIV expr .
   27     | expr . MODULO expr

    $default  reduce using rule 26 (expr)


State 107

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   27     | expr MODULO expr .

    $default  reduce using rule 27 (expr)


State 108

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   18     | expr EQUAL expr .
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 18 (expr)


State 109

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   17     | expr NOT_EQUAL expr .
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 17 (expr)


State 110

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   22     | expr GREATER expr .
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MODULO  shift, and go to state 71

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 111

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   21     | expr GREATER_EQUAL expr .
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MODULO  shift, and go to state 71

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 112

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   20     | expr LESS expr .
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MODULO  shift, and go to state 71

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 113

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   19     | expr LESS_EQUAL expr .
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    PLUS    shift, and go to state 67
    MINUS   shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MODULO  shift, and go to state 71

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS           error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 114

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   46 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 129
    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77


State 115

   54 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 130


State 116

   45 member: lvalue FULLSTOP ID .

    $default  reduce using rule 45 (member)


State 117

   55 methodcall: DOUBLE_COLON ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 131


State 118

   14 expr: lvalue ASSIGN expr .
   15     | expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr

    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77

    $default  reduce using rule 14 (expr)


State 119

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   48 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 132
    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77


State 120

   49 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 133


State 121

   47 member: call FULLSTOP ID .

    $default  reduce using rule 47 (member)


State 122

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   56 elist: expr COMMA expr .

    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77

    $default  reduce using rule 56 (elist)


State 123

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 42
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    elist      go to state 134
    objectdef  go to state 32
    const      go to state 35


State 124

   69 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt
   70       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt ELSE stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACE        shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    SEMICOLON         shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 8
    IF                shift, and go to state 9
    WHILE             shift, and go to state 10
    FOR               shift, and go to state 11
    FUNCTION          shift, and go to state 12
    RETURN            shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    stmt        go to state 135
    expr        go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 125

   71 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACE        shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    SEMICOLON         shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 8
    IF                shift, and go to state 9
    WHILE             shift, and go to state 10
    FOR               shift, and go to state 11
    FUNCTION          shift, and go to state 12
    RETURN            shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    stmt        go to state 136
    expr        go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 126

   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 137
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    objectdef  go to state 32
    const      go to state 35


State 127

   62 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 138


State 128

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 123


State 129

   46 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 46 (member)


State 130

   54 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 54 (normcall)


State 131

   55 methodcall: DOUBLE_COLON ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 42
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    elist      go to state 139
    objectdef  go to state 32
    const      go to state 35


State 132

   48 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 48 (member)


State 133

   49 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 49 (call)


State 134

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 140


State 135

   69 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .
   70       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . ELSE stmt

    ELSE  shift, and go to state 141

    ELSE      [reduce using rule 69 (ifstmt)]
    $default  reduce using rule 69 (ifstmt)


State 136

   71 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 71 (whilestmt)


State 137

   15 expr: expr . OR expr
   16     | expr . AND expr
   17     | expr . NOT_EQUAL expr
   18     | expr . EQUAL expr
   19     | expr . LESS_EQUAL expr
   20     | expr . LESS expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . GREATER expr
   23     | expr . PLUS expr
   24     | expr . MINUS expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . MODULO expr
   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt

    SEMICOLON      shift, and go to state 142
    AND            shift, and go to state 65
    OR             shift, and go to state 66
    PLUS           shift, and go to state 67
    MINUS          shift, and go to state 68
    MUL            shift, and go to state 69
    DIV            shift, and go to state 70
    MODULO         shift, and go to state 71
    EQUAL          shift, and go to state 72
    NOT_EQUAL      shift, and go to state 73
    GREATER        shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS           shift, and go to state 76
    LESS_EQUAL     shift, and go to state 77


State 138

   62 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_BRACE  shift, and go to state 4

    block  go to state 143


State 139

   55 methodcall: DOUBLE_COLON ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 144


State 140

   51 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 51 (call)


State 141

   70 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE . stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACE        shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    SEMICOLON         shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 8
    IF                shift, and go to state 9
    WHILE             shift, and go to state 10
    FOR               shift, and go to state 11
    FUNCTION          shift, and go to state 12
    RETURN            shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    stmt        go to state 145
    expr        go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 142

   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist SEMICOLON RIGHT_PARENTHESIS stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    DOUBLE_COLON      shift, and go to state 8
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expr       go to state 42
    primary    go to state 28
    lvalue     go to state 29
    member     go to state 30
    call       go to state 31
    elist      go to state 146
    objectdef  go to state 32
    const      go to state 35


State 143

   62 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 62 (funcdef)


State 144

   55 methodcall: DOUBLE_COLON ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 55 (methodcall)


State 145

   70 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt .

    $default  reduce using rule 70 (ifstmt)


State 146

   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . SEMICOLON RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 147


State 147

   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 148


State 148

   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS . stmt

    INTEGER           shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    LEFT_BRACE        shift, and go to state 4
    LEFT_BRACKET      shift, and go to state 5
    LEFT_PARENTHESIS  shift, and go to state 6
    SEMICOLON         shift, and go to state 7
    DOUBLE_COLON      shift, and go to state 8
    IF                shift, and go to state 9
    WHILE             shift, and go to state 10
    FOR               shift, and go to state 11
    FUNCTION          shift, and go to state 12
    RETURN            shift, and go to state 13
    BREAK             shift, and go to state 14
    CONTINUE          shift, and go to state 15
    NOT               shift, and go to state 16
    LOCAL             shift, and go to state 17
    TRUE              shift, and go to state 18
    FALSE             shift, and go to state 19
    NIL               shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    stmt        go to state 149
    expr        go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    block       go to state 33
    funcdef     go to state 34
    const       go to state 35
    ifstmt      go to state 36
    whilestmt   go to state 37
    forstmt     go to state 38
    returnstmt  go to state 39


State 149

   72 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist SEMICOLON RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 72 (forstmt)
